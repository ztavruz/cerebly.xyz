<?php

/**
 * Created by PhpStorm.
 * User: hust
 * Date: 12.07.2017
 * Time: 22:03
 */
class Question extends Storable
{
    public $id;
    public $date;
    public $content;
    public $category;
    public $user_id;
	public $answer;
	public $firstname;
	public $lastname;
	public $email;
    static function getAll()
    {
        return parent::getAll(__CLASS__); // TODO: Change the autogenerated stub
    }

    static function getById($id)
    {
        return parent::getById(__CLASS__, $id); // TODO: Change the autogenerated stub
    }

    static function tableName()
    {
        return 'questions';
    }


    public function save()
    {
        if(empty($this->id))
        {
            // insert
            $query = "INSERT INTO u0371456_base.questions( user_id ,firstname, lastname, email, category, content, answer)
            SELECT {$this->user_id},`firstname`, `lastname`, `email`, {$this->category}, '{$this->content}','{$this->answer}'
            FROM u0371456_base.users
            WHERE  `id` = $this->user_id";
            $isNew = true;
        }
        else
        {
            // update
            $query = "UPDATE questions SET user_id={$this->user_id},firstname={$this->firstname},lastname={$this->lastname},email={$this->email}, content='{$this->content}', category={$this->category}, answer={$this->answer} WHERE id={$this->id};";
            $isNew = false;
        }

        $res = Database::getDB()->setQuery($query);
        if($res) {
            if($isNew) {
                $this->id = Database::getDB()->getLastId();
            }
        } else return false;
        return true;
    }


    static function getQuestions($limit = '', $page = '')
    {
        $db = Database::getDB();

        $limit = empty($limit) ? '' :  ' LIMIT '.$limit;
        $offset = empty($page) ? '' :  ' OFFSET '.(($page - 1) * $limit);


        $query = 'SELECT * FROM '.static::tableName().$limit.$offset.';';
        $rows = $db->getQuery($query);
        return static::getObjects(__CLASS__, $rows);
    }


    public static function getQuestionsByUserID($user_id, $limit = '', $page = '')
    {
        $db = Database::getDB();

        $limit = empty($limit) ? '' :  ' LIMIT '.$limit;
        $offset = empty($page) ? '' :  ' OFFSET '.(($page - 1) * $limit);


        $query = 'SELECT * FROM '.static::tableName().' WHERE user_id='.$user_id.$limit.$offset.';';
        $rows = $db->getQuery($query);
        return static::getObjects(__CLASS__, $rows);
    }






}